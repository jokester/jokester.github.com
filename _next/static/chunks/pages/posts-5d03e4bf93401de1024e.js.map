{"version":3,"sources":["webpack://_N_E/./src/components/hoc/only-in-dev.tsx","webpack://_N_E/./pages/posts/index.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?f69d"],"names":["OnlyInDev","props","isDevBuild","children","PostListItem","meta","className","as","TypedRoutes","posts","show","slug","href","frontMatter","publishAt","lang","title","PostsIndexPage","files","map","mdFile","i","key","window","__NEXT_P","push"],"mappings":"iOAGaA,EAAqD,SAACC,GACjE,OAAQC,IAAaD,EAAME,SAAW,M,kBCmBlCC,EAAiD,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACxD,OACE,QAAIC,UAAU,cACZ,EAAC,IAAD,CAAMC,GAAIC,IAAYC,MAAMC,KAAKL,EAAKM,MAAOC,KAAK,oBAChD,WACE,UAAMN,UAAU,kCAAkCD,EAAKQ,YAAYC,WAAa,cAChF,UAAMC,KAAMV,EAAKQ,YAAYE,MAAOV,EAAKQ,YAAYG,OACrD,EAAC,EAAD,KACG,U,KAeEC,UAnC6B,SAAChB,GAC3C,OACE,EAAC,IAAD,KACE,YACGA,EAAMiB,MAAMC,KAAI,SAACC,EAAQC,GAAT,OACf,EAAC,EAAD,CAAchB,KAAMe,EAAQE,IAAKD,W,sBCftCE,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,SACA,WACE,OAAO,EAAQ,a","file":"static/chunks/pages/posts-5d03e4bf93401de1024e.js","sourcesContent":["import React from 'react';\nimport { isDevBuild } from '../../config/build-env';\n\nexport const OnlyInDev: React.FC<{ children: React.ReactNode }> = (props) => {\n  return (isDevBuild ? props.children : null) as React.ReactElement;\n};\n","import * as React from 'react';\nimport { Layout } from '../../src/components/layout/layout';\nimport { GetStaticProps } from 'next';\nimport { getMarkdownList, MarkdownMeta } from '../../src/ssr/resolve-markdown-posts';\nimport Link from 'next/link';\nimport { TypedRoutes } from '../../src/config/routes';\nimport { OnlyInDev } from '../../src/components/hoc/only-in-dev';\n\ninterface PageProps {\n  files: MarkdownMeta[];\n}\nconst PostsIndexPage: React.FC<PageProps> = (props) => {\n  return (\n    <Layout>\n      <ul>\n        {props.files.map((mdFile, i) => (\n          <PostListItem meta={mdFile} key={i} />\n        ))}\n      </ul>\n    </Layout>\n  );\n};\n\nconst PostListItem: React.FC<{ meta: MarkdownMeta }> = ({ meta }) => {\n  return (\n    <li className=\"block my-2\">\n      <Link as={TypedRoutes.posts.show(meta.slug)} href=\"/posts/[...slug]\">\n        <a>\n          <span className=\"text-sm mr-2 sm:mr-4 font-mono\">{meta.frontMatter.publishAt || '7777-77-77'}</span>\n          <span lang={meta.frontMatter.lang}>{meta.frontMatter.title}</span>\n          <OnlyInDev>\n            {null}\n            {/*<code className=\"block\">({meta.slug.join('/')})</code>*/}\n          </OnlyInDev>\n        </a>\n      </Link>\n    </li>\n  );\n};\n\nexport const getStaticProps: GetStaticProps<PageProps> = async (ctx) => {\n  const files = await getMarkdownList();\n\n  return { props: { files: files.files } };\n};\n\nexport default PostsIndexPage;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/posts\",\n      function () {\n        return require(\"private-next-pages/posts/index.tsx\");\n      }\n    ]);\n  "],"sourceRoot":""}