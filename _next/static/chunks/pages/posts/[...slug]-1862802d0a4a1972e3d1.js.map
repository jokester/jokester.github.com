{"version":3,"sources":["webpack://_N_E/./pages/posts/[...slug].tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?aea1","webpack://_N_E/./src/components/meta/html-meta.tsx"],"names":["PostsShowPage","props","title","mdMeta","frontMatter","meta","content","mdContent","window","__NEXT_P","push","HtmlMeta","createLogger","__filename","router","useRouter","httpEquiv","name","rel","href","SiteMeta","canonicalOrigin","asPath"],"mappings":"2OA6CeA,UA7B4B,SAACC,GAAD,OACzC,EAAC,IAAD,KACE,EAAC,IAAD,CAAUC,MAAK,UAAKD,EAAME,OAAOC,YAAYF,SAC7C,EAAC,IAAD,CAAiBG,KAAMJ,EAAME,OAAQG,QAASL,EAAMM,e,wBClBnDC,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,mBACA,WACE,OAAO,EAAQ,Y,oLCGVC,GADEC,YAAaC,GACyB,SAACZ,GAIpD,IAAMa,EAASC,sBAEf,OACE,EAAC,IAAD,KACE,eAAQd,EAAMC,OACd,UAAMc,UAAU,kBAAkBV,QAAQ,YAC1C,UAAMW,KAAK,WAAWX,QAAQ,0EAC9B,UAAMY,IAAI,YAAYC,KAAI,UAAKC,IAASC,iBAAd,OAAgCP,EAAOQ,e","file":"static/chunks/pages/posts/[...slug]-1862802d0a4a1972e3d1.js","sourcesContent":["import React from 'react';\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport { Layout } from '../../src/components/layout/layout';\nimport { getMarkdownList, MarkdownMeta, readMarkdownContent } from '../../src/ssr/resolve-markdown-posts';\nimport { HtmlMeta } from '../../src/components/meta/html-meta';\nimport { MarkdownArticle } from '../../src/components/markdown/markdown-article';\n\ninterface RouteParams extends Record<string, string | string[]> {\n  slug: string[];\n}\n\ninterface PageProps {\n  mdMeta: MarkdownMeta;\n  mdContent: string;\n}\n\nconst PostsShowPage: React.FC<PageProps> = (props) => (\n  <Layout>\n    <HtmlMeta title={`${props.mdMeta.frontMatter.title}`} />\n    <MarkdownArticle meta={props.mdMeta} content={props.mdContent} />\n  </Layout>\n);\n\nexport const getStaticPaths: GetStaticPaths<RouteParams> = async () => {\n  const x = await getMarkdownList();\n  return {\n    paths: x.files.map((mdFile) => ({\n      params: {\n        slug: mdFile.slug,\n      } as RouteParams,\n    })),\n    fallback: false,\n  };\n};\n\nexport const getStaticProps: GetStaticProps<PageProps> = async (ctx) => {\n  const query: RouteParams = ctx.params as any;\n  const parsedMarkdown = await readMarkdownContent(query.slug);\n  return {\n    props: {\n      mdMeta: parsedMarkdown.meta,\n      mdContent: parsedMarkdown.content,\n    },\n  };\n};\nexport default PostsShowPage;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/posts/[...slug]\",\n      function () {\n        return require(\"private-next-pages/posts/[...slug].tsx\");\n      }\n    ]);\n  ","import React from 'react';\nimport { SiteMeta } from '../../config/const';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { createLogger } from '../../utils/debug-logger';\n\nconst logger = createLogger(__filename);\nexport const HtmlMeta: React.FC<{ title: string }> = (props) => {\n  /**\n   * TODO: ogp / keywords / etc\n   */\n  const router = useRouter();\n\n  return (\n    <Head>\n      <title>{props.title}</title>\n      <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1,maximum-scale=1.5,minimum-scale=1\" />\n      <link rel=\"canonical\" href={`${SiteMeta.canonicalOrigin}${router.asPath}`} />\n    </Head>\n  );\n};\n"],"sourceRoot":""}